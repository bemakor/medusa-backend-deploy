name: Terraform Backend Bootstrap

on:
  workflow_dispatch:
    inputs:
      bucket_name:
        description: 'S3 bucket name for Terraform state'
        required: true
        default: 'medusa-cicd-tfstate-bucket'
      dynamodb_table:
        description: 'DynamoDB table name for state locking'
        required: true
        default: 'medusa-tfstate-lock'
jobs:
  create_backend_resources:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Check and create S3 bucket for Terraform state
        run: |
          set -e
          BUCKET_NAME="${{ github.event.inputs.bucket_name }}"
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "S3 bucket $BUCKET_NAME already exists."
          else
            echo "Creating S3 bucket $BUCKET_NAME..."
            aws s3api create-bucket --bucket "$BUCKET_NAME" --region us-east-1
            echo "S3 bucket $BUCKET_NAME created."
          fi

      - name: Check and create DynamoDB table for state locking
        run: |
          set -e
          TABLE_NAME="${{ github.event.inputs.dynamodb_table }}"
          if aws dynamodb describe-table --table-name "$TABLE_NAME" 2>/dev/null; then
            echo "DynamoDB table $TABLE_NAME already exists."
          else
            echo "Creating DynamoDB table $TABLE_NAME..."
            aws dynamodb create-table \
              --table-name "$TABLE_NAME" \
              --attribute-definitions AttributeName=LockID,AttributeType=S \
              --key-schema AttributeName=LockID,KeyType=HASH \
              --billing-mode PAY_PER_REQUEST
            echo "DynamoDB table $TABLE_NAME created."
          fi
